package assignment1;


public class LineScheduler {

private static final int LINE = 2;

	
public double fastestway	(double[][] a,double[][] t,double[] e,double[] x,int n)

{
	 double [][]f = new double [LINE][n];
	 int [][]l = new int [LINE][n];
	 double f_star = 0;
	 int l_star = 0;
	 
f[0][0] = e[0] + a[0][0];
f[1][0] = e[1] + a[1][0];

for (int j = 1; j < n; j++) {
  if (f[0][j-1] + a[0][j] <= f[1][j-1] + t[1][j-1] + a[0][j]) {
	f[0][j] = f[0][j-1] + a[0][j];
	l[0][j] = 0;
  } 
  else {
	f[0][j] = f[1][j-1] + t[1][j-1] + a[0][j];
	l[0][j] = 1;
  }

  if (f[1][j-1] + a[1][j] <= f[0][j-1] + t[0][j-1] + a[1][j]) {
	f[1][j] = f[1][j-1] + a[1][j];
	l[1][j] = 1;
  } 
  else {
	f[1][j] = f[0][j-1] + t[0][j-1] + a[1][j];
	l[1][j] = 0;
  }
}

if (f[0][n-1] + x[0] <= f[1][n-1] + x[1]) {
  f_star = f[0][n-1] + x[0];
  l_star = 0;
} 
else {
  f_star = f[1][n-1] + x[1];
  l_star = 1;
}
return f_star;
}
	
	

}
